import platform
# make sure python 3.9 is loaded
print(platform.python_version())
from spacetime.input.readData import read_data
from spacetime.input.readData import read_data
from spacetime.scale.rasterAlign import raster_align
from spacetime.scale.rasterTrim import raster_trim
from spacetime.objects.fileObject import file_object
from spacetime.operations.cubeSmasher import cube_smasher
from spacetime.operations.cubeSmasher import cube_smasher
from spacetime.operations.makeCube import make_cube
from spacetime.operations.loadCube import load_cube
from spacetime.graphics.dataPlot import plot_cube
from spacetime.operations.time import cube_time, return_time, scale_time, select_time
from spacetime.operations.time import cube_time, return_time, scale_time, select_time
from spacetime.operations.cubeToDataframe import cube_to_dataframe
data = ["demoData/LULC_1995.tif", "demoData/India_cropped-area_1km_2016.tif"]
# load data
fo = read_data(data)
# let's query some attributes of this file object
fo.number_of_bands() # check number of bands
fo.extract_epsg_code() # check the epsg codes
fo.get_raster_dimensions() # check the raster dimensions
fo.pixel_size() # check pixel size
fo.get_nodata_value() # check no data values
# Get the array data
arrays = fo.get_raster_data()
arrays = fo.get_raster_data()
# plot file 1
plt.imshow(arrays[0], vmin=0, vmax=17, cmap='gray')
plt.show()
# plot file 2
# plot file 2
plt.imshow(arrays[1], vmin=0, vmax=100, cmap='gray')
plt.show()
from spacetime.input.readData import read_data
from spacetime.scale.rasterAlign import raster_align
from spacetime.scale.rasterTrim import raster_trim
from spacetime.objects.fileObject import file_object
from spacetime.operations.cubeSmasher import cube_smasher
from spacetime.operations.makeCube import make_cube
from spacetime.operations.loadCube import load_cube
from spacetime.graphics.dataPlot import plot_cube
from spacetime.operations.time import cube_time, return_time, scale_time, select_time
from spacetime.operations.cubeToDataframe import cube_to_dataframe
import matplotlib.pyplot as plt
data = ["demoData/LULC_1995.tif", "demoData/India_cropped-area_1km_2016.tif"]
# load data
fo = read_data(data)
alignedFO = raster_align(data=fo, resolution=0.08, SRS=4326, noneVal=127)
trimmedFO = raster_trim(alignedFO, method = "intersection")
yearObj = cube_time(start="1995", length=2, scale = "year", skips = 21)
# set files as the variables and bands within each file as time variables
cube = make_cube(data = trimmedFO, fileName = "indiaCube.nc4", organizeFiles = "filestotime", organizeBands="bandstotime", timeObj = yearObj)
## let's look at the structure of the cube
cube.get_raster_data()
plot_cube(cube=cube, type="space", showPlot=True)
plot_cube(cube=cube, type="timeseries", showPlot=True)
plot_cube(cube=cube, type="timeseries", showPlot=True)
plot_cube(cube=cube, type="time_series", showPlot=True)
cube.get_raster_data()
cube.get_raster_data()[40,40,0]
cube.get_raster_data()[120,40,0]
cube.get_raster_data()[120,40,1]
from spacetime.input.readData import read_data
from spacetime.scale.rasterAlign import raster_align
from spacetime.scale.rasterTrim import raster_trim
from spacetime.objects.fileObject import file_object
from spacetime.operations.cubeSmasher import cube_smasher
from spacetime.operations.makeCube import make_cube
from spacetime.operations.loadCube import load_cube
from spacetime.graphics.dataPlot import plot_cube
from spacetime.operations.time import cube_time, return_time, scale_time, select_time
from spacetime.operations.cubeToDataframe import cube_to_dataframe
import matplotlib.pyplot as plt
yearObj = cube_time(start="1995", length=2, scale = "year", skips = 21)
# set files as the variables and bands within each file as time variables
cube = make_cube(data = trimmedFO, fileName = "indiaCube.nc4", organizeFiles = "filestotime", organizeBands="bandstotime", timeObj = yearObj)
# set files as the variables and bands within each file as time variables
cube = make_cube(data = trimmedFO, fileName = "indiaCube.nc4", organizeFiles = "filestotime", organizeBands="bandstotime", timeObj = yearObj)
## let's look at the structure of the cube
cube.get_raster_data()
cube.get_raster_data()[120,40,1]
cube.get_raster_data()[120,40,0]
cube = make_cube(data = trimmedFO, fileName = "indiaCube.nc4", organizeFiles = "filestotime", organizeBands="bandstotime", timeObj = yearObj)
cube = make_cube(data = trimmedFO, fileName = "indiaCube.nc4", organizeFiles = "filestotime", organizeBands="bandstotime", timeObj = yearObj)
## let's look at the structure of the cube
cube.get_raster_data()
cube.get_raster_data()[120,40,0]
cube.get_raster_data()[120,40,1]
trimmedFO.get_raster_data()
trimmedFO.get_raster_data()[0]
trimmedFO.get_raster_data()[0][40,120]
trimmedFO.get_raster_data()[1][40,120]
from spacetime.input.readData import read_data
from spacetime.scale.rasterAlign import raster_align
from spacetime.scale.rasterTrim import raster_trim
from spacetime.objects.fileObject import file_object
from spacetime.operations.cubeSmasher import cube_smasher
from spacetime.operations.makeCube import make_cube
from spacetime.operations.loadCube import load_cube
from spacetime.graphics.dataPlot import plot_cube
from spacetime.operations.time import cube_time, return_time, scale_time, select_time
from spacetime.operations.cubeToDataframe import cube_to_dataframe
import matplotlib.pyplot as plt
# set files as the variables and bands within each file as time variables
cube = make_cube(data = trimmedFO, fileName = "indiaCube.nc4", organizeFiles = "filestotime", organizeBands="bandstotime", timeObj = yearObj)
cube = make_cube(data = trimmedFO, fileName = "indiaCube.nc4", organizeFiles = "filestotime", organizeBands="bandstotime", timeObj = yearObj)
plot_cube(cube=cube, type="space", showPlot=True)
import platform
# make sure python 3.9 is loaded
from spacetime.input.readData import read_data
from spacetime.scale.rasterAlign import raster_align
from spacetime.scale.rasterTrim import raster_trim
from spacetime.objects.fileObject import file_object
from spacetime.operations.cubeSmasher import cube_smasher
from spacetime.operations.makeCube import make_cube
from spacetime.operations.loadCube import load_cube
from spacetime.graphics.dataPlot import plot_cube
from spacetime.operations.time import cube_time, return_time, scale_time, select_time
from spacetime.operations.cubeToDataframe import cube_to_dataframe
import matplotlib.pyplot as plt
# read files
data = ["demoData/LULC_1995.tif", "demoData/India_cropped-area_1km_2016.tif"]
# load data
fo = read_data(data)
# let's query some attributes of this file object
fo.number_of_bands() # check number of bands
fo.extract_epsg_code() # check the epsg codes
fo.get_raster_dimensions() # check the raster dimensions
fo.pixel_size() # check pixel size
fo.get_nodata_value() # check no data values
arrays = fo.get_raster_data()
arrays = fo.get_raster_data()
# plot file 1
plt.imshow(arrays[0], vmin=0, vmax=17, cmap='gray')
plt.show()
# plot file 2
# plot file 2
plt.imshow(arrays[1], vmin=0, vmax=100, cmap='gray')
plt.show()
alignedFO = raster_align(data=fo, resolution=0.08, SRS=4326, noneVal=127)
# let's query some attributes after aligning:
alignedFO.extract_epsg_code() # check the epsg codes
alignedFO.get_raster_dimensions() # check the raster dimensions
alignedFO.pixel_size() # check pixel size
alignedFO.get_nodata_value() # check no data values
arrays = alignedFO.get_raster_data()
# plot file 1
plt.imshow(arrays[0], vmin=0, vmax=17, cmap='gray')
plt.show()
# plot file 2
plt.imshow(arrays[1], vmin=0, vmax=100, cmap='gray')
plt.show()
trimmedFO = raster_trim(alignedFO, method = "intersection")
# check the raster dimensions to ensure we have a successful intersection
trimmedFO.get_raster_dimensions()
yearObj = cube_time(start="1995", length=2, scale = "year", skips = 21)
# set files as the variables and bands within each file as time variables
cube = make_cube(data = trimmedFO, fileName = "indiaCube.nc4", organizeFiles = "filestotime", organizeBands="bandstotime", timeObj = yearObj)
plot_cube(cube=cube, type="time_series", showPlot=True,summary="mean")
yearObj = cube_time(start="1995", length=2, scale = "year", skips = 21)
# set files as the variables and bands within each file as time variables
cube = make_cube(data = trimmedFO, fileName = "indiaCube.nc4", organizeFiles = "filestotime", organizeBands="bandstotime", timeObj = yearObj)
plot_cube(cube=cube, type="time_series", showPlot=True,summary="mean")
plot_cube(cube=cube, type="space", showPlot=True)
import platform
# make sure python 3.9 is loaded
print(platform.python_version())
from spacetime.input.readData import read_data
from spacetime.scale.rasterAlign import raster_align
from spacetime.scale.rasterTrim import raster_trim
from spacetime.objects.fileObject import file_object
from spacetime.operations.cubeSmasher import cube_smasher
from spacetime.operations.makeCube import make_cube
from spacetime.operations.loadCube import load_cube
from spacetime.graphics.dataPlot import plot_cube
from spacetime.operations.time import cube_time, return_time, scale_time, select_time
from spacetime.operations.cubeToDataframe import cube_to_dataframe
import matplotlib.pyplot as plt
data = ["demoData/LULC_1995.tif", "demoData/India_cropped-area_1km_2016.tif"]
# load data
fo = read_data(data)
alignedFO = raster_align(data=fo, resolution=0.08, SRS=4326, noneVal=127)
trimmedFO = raster_trim(alignedFO, method = "intersection")
yearObj = cube_time(start="1995", length=2, scale = "year", skips = 21)
cube = make_cube(data = trimmedFO, fileName = "indiaCube.nc4", organizeFiles = "filestotime", organizeBands="bandstotime", timeObj = yearObj)
plot_cube(cube=cube, type="time_series", showPlot=True,summary="mean")
#load the reticulate package
library(reticulate)
#load the reticulate package
library(reticulate)
# activate environment
use_condaenv(condaenv = "myCondaEnvironment", conda = "auto", required = FALSE)
reticulate::repl_python()
